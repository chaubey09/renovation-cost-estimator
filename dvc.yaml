stages:
  m1_tabular_preprocess:
    cmd: >
      python -m src.tabular.preprocess
      --input ${paths.raw_tabular}
      --out ${paths.processed_tabular}
      --preview-csv ${paths.m1_preview_csv}
      --schema-json ${paths.m1_schema_json}
      --preview-n 200
    deps:
      - src/tabular/preprocess.py
      - ${paths.raw_tabular}
      - params.yaml
    outs:
      - ${paths.processed_tabular}
      - ${paths.m1_preview_csv}
      - ${paths.m1_schema_json}

  m2_quantity_estimation:
    cmd: >
      python -m src.quantity.estimate
      --tab ${paths.processed_tabular}
      --detections ${paths.detections}
      --out ${paths.quantities}
      --preview-csv ${paths.m2_preview_csv}
      --preview-n 200
    deps:
      - src/quantity/estimate.py
      - ${paths.processed_tabular}
      - params.yaml
    outs:
      - ${paths.quantities}
      - ${paths.m2_preview_csv}

  m3_cost_mapping:
    cmd: >
      python -m src.cost.map_costs
      --tab ${paths.processed_tabular}
      --qty ${paths.quantities}
      --cost-index ${paths.cost_indices_csv}
      --packages ${paths.packages_csv}
      --out ${paths.cost_breakdown}
      --metrics ${paths.metrics_m3}
      --plots ${paths.plots_dir}
      --preview-csv ${paths.m3_preview_csv}
      --preview-n 200
    deps:
      - src/cost/map_costs.py
      - ${paths.processed_tabular}
      - ${paths.quantities}
      - ${paths.cost_indices_csv}
      - ${paths.packages_csv}
      - params.yaml
    outs:
      - ${paths.cost_breakdown}
      - ${paths.plots_dir}
      - ${paths.m3_preview_csv}
    metrics:
      - ${paths.metrics_m3}

  # Train the LightGBM model (writes SHAP plot into outputs/plots/ via script)
  m4_train_model:
    cmd: >
      python src/train/train_model.py
      --costs ${paths.cost_breakdown}
      --processed ${paths.processed_tabular}
      --model-out ${paths.model_path}
      --metrics-out ${paths.train_metrics}
    deps:
      - src/train/train_model.py
      - ${paths.cost_breakdown}
      - ${paths.processed_tabular}
      - params.yaml
    outs:
      - ${paths.model_path}
    metrics:
      - ${paths.train_metrics}:
          cache: false

  m5_predict_model:
    cmd: >
      python -m src.model.batch_predict
      --model ${paths.model_path}
      --features ${paths.cost_breakdown}
      --out ${paths.ml_predictions}
    deps:
      - src/model/batch_predict.py
      - ${paths.model_path}
      - ${paths.cost_breakdown}
    outs:
      - ${paths.ml_predictions}

  # Final fused/reporting stage (consumes ML preds + cost mapping)
  m4_fusion_calibration_reporting:
    cmd: >
      python -m src.fusion.fuse_report
      --tab ${paths.processed_tabular}
      --cost ${paths.cost_breakdown}
      --ml ${paths.ml_predictions}
      --out ${paths.final_estimates}
      --metrics ${paths.metrics_final}
      --preview-csv ${paths.m4_preview_csv}
      --preview-n 200
    deps:
      - src/fusion/fuse_report.py
      - ${paths.processed_tabular}
      - ${paths.cost_breakdown}
      - ${paths.ml_predictions}
      - params.yaml
    outs:
      - ${paths.final_estimates}
      - ${paths.m4_preview_csv}
    metrics:
      - ${paths.metrics_final}

